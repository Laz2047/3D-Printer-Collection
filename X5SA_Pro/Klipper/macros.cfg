# -----------------------------------------------------------------
# --  Macros
# -----------------------------------------------------------------

# ---------------------------- Cancel Print -----------------------------
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G0 X330 Y330 Z10 F6000
  M117 Print Cancelled!

#[gcode_macro Screws_Tilt_Adjust]
#gcode:
#    SCREWS_TILT_CALCULATE
#    G90
#    G0 X165 Y330 Z10 F6000

#[gcode_macro Z_Tilt]
#gcode:
#    G28
#    Z_TILT_ADJUST
#    G90
#    G0 X165 Y330 Z10 F6000


# ---------------------------- M600 -----------------------------
[gcode_macro M600]
gcode:
  M117 Filament Change!
  SET_DISPLAY_TEXT MSG="Filament Change!"
  PAUSE


# ---------------------------- G29 -----------------------------
[gcode_macro G29]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
      M117 Already Homed
      G4 P2000
    {% else %}
      M117 Homing
      G28
    {% endif %} 
    
    #G28
#    Z_TILT_ADJUST
    M117 Mesh calibration
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE save=default
    G90
    G0 X165 Y330 Z10 F6000

#[gcode_macro Preflight]
#gcode:
#    G29
#    SAVE_CONFIG
#    G90
#    G0 X0 Y0 Z10 F6000

# --------------------------- Start Print ----------------------------
[gcode_macro START_PRINT]
variable_bed_temp: 55
variable_extruder_temp: 200
gcode:
    # Start bed heating
    M140 S{bed_temp}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
    # Wait for bed to reach temperature
    M190 S{bed_temp}
    # Home the printer
    G28
    # Print message on LCD
    M117 Load current bed mesh
    # Mesh Level
    BED_MESH_PROFILE LOAD=default   #G29
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move nozzle to front right corner
    G1 X325 Y1 #325
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Set and wait for nozzle to reach temperature
    M109 S{extruder_temp}
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z4.0 F3000
    ###### Nozzle purge ###########
    # Move to start position
    G1 X325 Y1 Z0.28 F5000.0
    # G1 X325 Y325 Z0.28 F5000.0
    # Draw the first line
    G1 X125 Y1 Z0.28 F1500.0 E15
    # G1 X125 Y325 Z0.28 F1500.0 E15
    # Move to side a little
    G1 X125 Y1.3 Z0.28 F5000.0
    # G1 X125 Y325.3 Z0.28 F5000.0
    # Draw the second line
    G1 X325 Y1.3 Z0.28 F1500.0 E30
    # G1 X325 Y325.3 Z0.28 F1500.0 E30
    ###### End Nozzle purge ###########
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z4.0 F3000

# ---------------------------- End Print -----------------------------
[gcode_macro END_PRINT]
variable_machine_depth: 330
gcode:
    M117 Print Completed
    # Turn off bed, extruder, and fan
    TURN_OFF_HEATERS
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G1 X0 Y{machine_depth} Z250 ;Present print
    M84 X Y E ;Disable all steppers except z

# ---------------------------- Pause Print -----------------------------
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  # change motor idle timeout to 10 hours
  SET_IDLE_TIMEOUT TIMEOUT=36000 
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
  M117 Paused
  SET_FILAMENT_SENSOR SENSOR=my_filament_sensor ENABLE=0

[gcode_macro FORM_TIP]
gcode:
    G91
    G92 E0
    G1 E-9.05 F1200
    G1 E0.68 F165
    G1 E0.70 F168
    G1 E0.73 F177
    G1 E0.78 F189
    G1 E0.82 F197
    G1 E0.84 F204
    G1 E0.90 F216
    G1 E0.97 F234
    G1 E1.02 F246
    G1 E1.04 F250
    G1 E-15.00 F6000.0
    G1 E-24.50 F5400.0
    G1 E-7.00 F2700.0
    G1 E-3.50 F1620.0
    G1 E20.00 F900.0
    G1 E-13 F500.0
    G1 E13 F400.0
    G1 E-11 F500.0
    G1 E11 F400.0
    G1 E-2.00 F50.0
    G1 E-4.00 F1200.0
    G1 E-10.00 F2000
    G92 E0


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  # change motor idle timeout to 10 minutes
  SET_IDLE_TIMEOUT TIMEOUT=600 
  SET_FILAMENT_SENSOR SENSOR=my_filament_sensor ENABLE=1
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  M117 Resume

[gcode_macro PinUp]
gcode:
 BLTOUCH_DEBUG COMMAND=pin_up

[gcode_macro Reset]
gcode:
 BLTOUCH_DEBUG COMMAND=reset

[gcode_macro PinDown]
gcode:
 BLTOUCH_DEBUG COMMAND=pin_down

[gcode_macro TriggerTest]
gcode:
 QUERY_PROBE

[gcode_macro M48]
gcode:
	G1 Z5
	PROBE
	G1 Z5
	PROBE
	G1 Z5
	PROBE
	G1 Z5
	PROBE
	G1 Z5
	PROBE
	G1 Z20
